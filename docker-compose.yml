services:
  backend:
    container_name: backend-container
    build:
      context: ./backend
    ports:
      - "${BACKEND_HOST_PORT:-5000}:${BACKEND_CONTAINER_PORT:-5000}"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env  # Load environment variables from .env
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm start

  frontend:
    container_name: frontend-container
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    env_file:
      - ./.env  # Load environment variables from .env
    volumes:
      - ./frontend:/app
      - /app/node_modules

  db:
    container_name: db-container
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data  # Persist data across restarts
      - ./backend/src/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro  # Mount init.sql to auto-execute
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mock-data-loader:
    image: node:14
    depends_on:
      - backend
    volumes:
      - .:/app
    working_dir: /app/backend/src/database
    command: ["node", "loadMockData.js"]

volumes:
  pgdata: